[{"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\index.js":"1","C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\App.js":"2","C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\TodoForm.js":"3","C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\TodoList.js":"4","C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\Todo.js":"5"},{"size":251,"mtime":1607520560907,"results":"6","hashOfConfig":"7"},{"size":255,"mtime":1607525147638,"results":"8","hashOfConfig":"7"},{"size":790,"mtime":1607525752328,"results":"9","hashOfConfig":"7"},{"size":893,"mtime":1607534388427,"results":"10","hashOfConfig":"7"},{"size":837,"mtime":1607535484183,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t1lncu",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\index.js",[],"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\App.js",["23"],"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\TodoForm.js",[],"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\TodoList.js",["24","25"],"C:\\Users\\sousou\\Documents\\projet_react\\Challenges\\react-todo\\src\\Components\\Todo.js",["26","27","28","29"],"import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n    return todos.map((todo, index) =>(\r\n        <div \r\n             className={todo.isComplete ? 'todo-row complete': 'todo-row'} \r\n             key={index} \r\n             >\r\n                <div key={todo.id} onClick={()=> completeTodo(todo.id)}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <RiCloseCircleLine />\r\n                    <TiEdit />\r\n                </div>\r\n        </div>\r\n    )\r\n    );\r\n}\r\nexport default Todo\r\n",{"ruleId":"30","severity":1,"message":"31","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":19,"column":42,"nodeType":"36","messageId":"37","endLine":19,"endColumn":44},{"ruleId":"38","severity":1,"message":"39","line":20,"column":17,"nodeType":"40","messageId":"41","endLine":20,"endColumn":51},{"ruleId":"30","severity":1,"message":"31","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":16},{"ruleId":"30","severity":1,"message":"42","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":16},{"ruleId":"30","severity":1,"message":"43","line":8,"column":12,"nodeType":"32","messageId":"33","endLine":8,"endColumn":16},{"ruleId":"30","severity":1,"message":"44","line":8,"column":18,"nodeType":"32","messageId":"33","endLine":8,"endColumn":25},"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'TodoList' is defined but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used."]